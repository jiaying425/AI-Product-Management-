<?xml version="1.0" encoding="UTF-8"?>
<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0" version="27.2.0">
  <diagram name="Page-1" id="32M6JvhvVxVHetDyQvSY">
    <mxGraphModel dx="1375" dy="2351" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1600" pageHeight="1600" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="E22wLcEm3Iu96GdcyPxs-1" value="Man&#39;s" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;fillColor=#6d8764;strokeColor=#3A5431;fontColor=#ffffff;" parent="1" vertex="1">
          <mxGeometry x="210" y="105" width="70" height="70" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-2" value="Search" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;fillColor=#647687;strokeColor=#314354;fontColor=#ffffff;" parent="1" vertex="1">
          <mxGeometry x="340" y="105" width="70" height="70" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-4" value="For" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;fillColor=#76608a;strokeColor=#432D57;fontColor=#ffffff;" parent="1" vertex="1">
          <mxGeometry x="480" y="105" width="70" height="70" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-5" value="?" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
          <mxGeometry x="630" y="105" width="70" height="70" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-7" value="" style="endArrow=none;dashed=1;html=1;rounded=0;endSize=100;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="40" y="200" as="sourcePoint" />
            <mxPoint x="860" y="200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-10" value="Input" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="110" width="110" height="60" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-11" value="&lt;div&gt;Tokenization&lt;/div&gt;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="45" y="220" width="115" height="60" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="E22wLcEm3Iu96GdcyPxs-16" target="E22wLcEm3Iu96GdcyPxs-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-16" value="RNN" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="790" y="20" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-17" value="&lt;div&gt;Transformers&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; (Human design Define Phase )&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="930" y="20" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-19" value="GPT-3 has&amp;nbsp;&lt;div style=&quot;display: contents&quot; data-subtree=&quot;aimfl&quot;&gt;a vocabulary size of &lt;/div&gt;&lt;b class=&quot;Yjhzub&quot;&gt;50,257 unique tokens&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="790" y="235" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="E22wLcEm3Iu96GdcyPxs-20" value="How Many GPT3 Parameters are calculated&amp;nbsp;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fillColor=#e1d5e7;strokeColor=none;strokeWidth=1;fontStyle=1" parent="1" vertex="1">
          <mxGeometry x="780" y="75" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-1" value="" style="endArrow=none;dashed=1;html=1;rounded=0;endSize=100;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="50" y="310" as="sourcePoint" />
            <mxPoint x="870" y="310" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-2" value="&lt;div&gt;Embedding Layer&lt;/div&gt;&lt;div&gt;Token -&amp;gt; Vectorize&amp;nbsp;&lt;/div&gt;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="330" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-3" value="&lt;div&gt;向量，空间，特征&lt;/div&gt;&lt;div&gt;Embedding : 把token 映射到新的数学空间&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="410" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-4" value="&lt;div&gt;GPT3 has a dimension number of 10288&amp;nbsp; - *d-model&amp;nbsp;&lt;/div&gt;&lt;div&gt;Each token is represented by a vector of 12,288 dimensions&lt;/div&gt;&lt;div&gt;[vocab_size, embedding_dim] = [50257, 12288]&lt;br&gt;50257 × 12288 = 617,173,056 parameters&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="780" y="330" width="330" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-8" value="E[8294]&amp;nbsp; &amp;nbsp; →&amp;nbsp; [0.132, -0.045, ..., 0.008]&amp;nbsp;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="200" y="345" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-12" value="[8294, 19635, 390]&lt;div&gt;&lt;br/&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="200" y="250" width="370" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-13" value="E[19635]   →  [-0.031, 0.117, ..., -0.002]" style="text;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="340" y="330" width="90" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-14" value="E[390]     →  [0.098, 0.015, ..., -0.013]" style="text;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="480" y="330" width="100" height="35" as="geometry" />
        </mxCell>
        <mxCell id="ulG9UOa0KZaU5ygMavOp-17" value="词元化" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="50" y="280" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="a-N1-dz5hdk3Jsslyo4F-1" value="&#xa;Token Embedding: V × d_model = 50,257 × 12,288 ≈ 618M" style="text;whiteSpace=wrap;fontColor=#FF3333;" parent="1" vertex="1">
          <mxGeometry x="780" y="370" width="290" height="40" as="geometry" />
        </mxCell>
        <mxCell id="a-N1-dz5hdk3Jsslyo4F-2" value="&lt;span data-end=&quot;250&quot; data-start=&quot;236&quot;&gt;Parameters&lt;/span&gt; are the &lt;span data-end=&quot;280&quot; data-start=&quot;259&quot;&gt;learnable weights&lt;/span&gt; of the model — the values the model adjusts during training to reduce error and improve performance." style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fillColor=#e1d5e7;strokeColor=none;strokeWidth=1;fontStyle=1;fontColor=#FF3333;" parent="1" vertex="1">
          <mxGeometry x="780" y="115" width="290" height="60" as="geometry" />
        </mxCell>
        <mxCell id="a-N1-dz5hdk3Jsslyo4F-4" value="&lt;h3 data-start=&quot;383&quot; data-end=&quot;458&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;GPT-3 is a transformer&lt;b&gt; decode-only Model&lt;/b&gt;. The total parameter count depends on&lt;/span&gt;:&lt;/h3&gt;&lt;h3 data-start=&quot;383&quot; data-end=&quot;458&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;1. Embedding Layer&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;&lt;h3 data-start=&quot;383&quot; data-end=&quot;458&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;2. Transform blocks (with Self - attention and feedforward layers&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;&lt;h3 data-start=&quot;383&quot; data-end=&quot;458&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;3. Output Project Layers( Often tied with embedding layers&lt;/span&gt;&lt;/font&gt;&amp;nbsp;&amp;nbsp;&lt;/h3&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="70" y="-160" width="570" height="30" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-1" value="" style="endArrow=none;dashed=1;html=1;rounded=0;endSize=100;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="45" y="460" as="sourcePoint" />
            <mxPoint x="865" y="460" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-3" value="&lt;div&gt;Positional&amp;nbsp;&lt;/div&gt;&lt;div&gt;Encoding&lt;/div&gt;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="40" y="480" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-4" value="&lt;div align=&quot;left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With Transformer&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;dashed=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="40" y="10" width="180" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-17" value="" style="whiteSpace=wrap;html=1;aspect=fixed;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="80" y="40" width="10" height="10" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-26" value="&lt;div&gt;位置编码 - 语义受位置影响:&lt;/div&gt;&lt;div&gt;Cats chase a dog&lt;/div&gt;&lt;div&gt;Dogs chase a cat&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="560" width="185" height="30" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-27" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" parent="1" vertex="1">
          <mxGeometry x="210" y="480" width="265" height="92.96" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-28" value="&lt;div&gt;&lt;div&gt;GPT 3 has a&amp;nbsp; maximum number of tokens input&amp;nbsp; as 2024-&amp;nbsp; &amp;nbsp;A container with 2024 slot , L&amp;nbsp;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: generic-light-dark(rgb(128, 0, 255), rgb(237, 237, 237));&quot;&gt;&lt;span style=&quot;color: generic-light-dark(rgb(128, 0, 255), rgb(166, 109, 145));&quot;&gt;&lt;span style=&quot;color: generic-light-dark(rgb(128, 0, 64), rgb(166, 109, 145));&quot;&gt;&lt;span style=&quot;color: rgb(181, 115, 157);&quot;&gt;&lt;b&gt;Positional Encoding Params&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(181, 115, 157);&quot;&gt;&lt;b&gt;Matrix:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;L(2024)* d-model (12288)&amp;nbsp; &amp;nbsp;= 24,870,912 -- Assign one positional vector to each token position&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="780" y="461.48" width="350" height="130" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-30" value="" style="endArrow=none;dashed=1;html=1;rounded=0;endSize=100;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="30" y="630" as="sourcePoint" />
            <mxPoint x="850" y="630" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-31" value="Decoder Only&amp;nbsp;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="35" y="680" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-32" value="&lt;div&gt;&lt;b&gt;Masked Multi-head Self-Attention Layers:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;1.allows the model to focus on important words&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;2.some heads tends to gather attention around central or topic related words&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;3.Masked -&amp;gt;Postion i can only attend to position &amp;lt;=j&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#f5f5f5;gradientColor=light-dark(#ffffff, #535353);strokeColor=light-dark(#A9C4EB,#959595);dashed=1;dashPattern=8 8;" parent="1" vertex="1">
          <mxGeometry x="180" y="640" width="240" height="90" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-33" value="&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Feedforward Neural Networks(FNN):&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;1. A 2-layer NN -&amp;gt; each position&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;FFN&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;ReLU&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;span class=&quot;base&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;span class=&quot;mord&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;/font&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;2. Add non-linearity and help transform beyond attention&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;gradientColor=light-dark(#ffffff, #535353);strokeColor=light-dark(#CCE5FF,#959595);align=left;dashed=1;dashPattern=8 8;" parent="1" vertex="1">
          <mxGeometry x="180" y="750" width="240" height="80" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-34" value="&lt;div&gt;Encoder: Analysis task e.g. Vector similarity;&lt;/div&gt;&lt;div&gt;Decoder: Output&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="30" y="805" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-35" value="Input →&#xa;  ⬇️ LayerNorm&#xa;  ⬇️ Masked Multi-Head Self-Attention&#xa;  ➕ Residual Connection&#xa;  ⬇️ LayerNorm&#xa;  ⬇️ Feedforward Neural Network (FFN)&#xa;  ➕ Residual Connection&#xa;Output" style="text;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="448.46" y="680" width="152.5" height="280" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-40" value="&lt;h4 data-end=&quot;1095&quot; data-start=&quot;1049&quot;&gt;➕&amp;nbsp;&lt;strong data-end=&quot;1095&quot; data-start=&quot;1059&quot;&gt;Residual Connections + LayerNorm&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;span data-end=&quot;1095&quot; data-start=&quot;1059&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;font style=&quot;font-size: 10px;&quot;&gt;Help stabilize training;&amp;nbsp;Preserve gradients and prevent degradation over many layer&lt;/font&gt;s&lt;/span&gt;&lt;/h4&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=light-dark(#CCE5FF,#EDEDED);dashed=1;dashPattern=8 8;" parent="1" vertex="1">
          <mxGeometry x="180" y="840" width="240" height="100" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-41" value="&lt;div&gt;&lt;div&gt;GPT 3 - 96 stacked transformer layers Params:&lt;/div&gt;&lt;div&gt;1. Self - attention Parameters&amp;nbsp;&lt;/div&gt;&lt;div&gt;Self attention Q,K,V Projections: 3 x (d - model * d - model)&lt;/div&gt;&lt;div&gt;Output projection : 1 x (d - model * d - model)&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Attention Params = 4 * d-model * d- model = 4 * 12,288 * 12,288 = 603,979,776&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. FFN Parameters&amp;nbsp;&lt;/div&gt;&lt;div&gt;- First Linear Layer : d - model * d_ff&lt;/div&gt;&lt;div&gt;- Second Linear Layer : d_ff&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;FFN params = 2 *d-model * d_ff = 2 * 12,288 * 49,152 = 1,208,231,936&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3. Total Per Transformation Layer&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;Total&amp;nbsp;per&amp;nbsp;layer&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;Attention&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;FFN&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;604&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1.21&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1.814&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 data-end=&quot;1765&quot; data-start=&quot;1734&quot;&gt; 4. Multiply by 96 Layers&lt;/h3&gt;&lt;br/&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math display=&quot;block&quot; xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mrow&gt;&lt;mtext&gt;Total&amp;nbsp;for&amp;nbsp;96&amp;nbsp;layers&lt;/mtext&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;96&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;1.814&lt;/mn&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;174.144&lt;/mn&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;/mrow&gt;\text{Total for 96 layers} = 96 \times 1.814B = 174.144B&lt;/math&gt;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;katex-html&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;Total&amp;nbsp;for&amp;nbsp;96&amp;nbsp;layers&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1.814&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;174.144&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;p data-end=&quot;1904&quot; data-start=&quot;1831&quot;&gt;✅ &lt;strong data-end=&quot;1863&quot; data-start=&quot;1833&quot;&gt;≈ 174.1 billion parameters&lt;/strong&gt; just from the stacked transformer blocks&lt;/p&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="800" y="860" width="480" height="115" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-42" value="" style="strokeWidth=2;html=1;shape=mxgraph.flowchart.annotation_2;align=left;labelPosition=right;pointerEvents=1;rotation=-181;" parent="1" vertex="1">
          <mxGeometry x="610" y="670" width="50" height="210" as="geometry" />
        </mxCell>
        <mxCell id="LffQwIVgkhD6esxELWRf-43" value="&lt;font style=&quot;font-size: 20px;&quot;&gt;X 96 Layers&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="690" y="760" width="60" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
